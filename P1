#include <iostream>
using namespace std;
class Complex {
    double real;
    double imag;
public:
    Complex() {
        real = 0.0;
        imag = 0.0;
        cout << "Default constructor called" << endl;
    }
    Complex(double r, double i) {
        real = r;
        imag = i;
        cout << "Parameterized constructor called" << endl;
    }
    Complex(const Complex &c) {
        real = c.real;
        imag = c.imag;
        cout << "Copy constructor called" << endl;
    }
    ~Complex() {
        cout << "Destructor called for (" << real << ", " << imag << "i)" << endl;
    }
    void getdata() {
        cout << "Enter real part: ";
        cin >> real;
        cout << "Enter imaginary part: ";
        cin >> imag;
    }
    void showdata() {
        cout << real;
        if (imag >= 0)
            cout << " + " << imag << "i" << endl;
        else
            cout << " - " << -imag << "i" << endl;
    }
    Complex add_complex(Complex c1, Complex c2) {
        Complex temp;
        temp.real = c1.real + c2.real;
        temp.imag = c1.imag + c2.imag;
        return temp;
    }
};
int main() {
    Complex c1, c2, c3;
    cout << "\nEnter first complex number:\n";
    c1.getdata();
    cout << "Enter second complex number:\n";
    c2.getdata();
    c3 = c3.add_complex(c1, c2);
    cout << "\nFirst complex number: ";
    c1.showdata();
    cout << "Second complex number: ";
    c2.showdata();
    cout << "Sum: ";
    c3.showdata();
    return 0;
}
